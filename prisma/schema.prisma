generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum MeasureUnit {
  reps
  seconds
}

model User {
  id          Int    @id @default(autoincrement())
  clerkUserId String @unique
  programs    Program[]
  workouts    Workout[]
  sections    Section[]
  exercises   Exercise[]
  images      Image[]
}

model Exercise {
  id           Int         @id @default(autoincrement())
  exerciseName String
  measureUnit  MeasureUnit
  measureCount String
  videoUrl     String?
  note         String?
  section      Section     @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  sectionId    Int
  user         User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       Int
  image        Image?      @relation(fields: [imageId], references: [id], onDelete: SetNull)
  imageId      Int?
}

model Section {
  id         Int        @id @default(autoincrement())
  name       String
  roundCount Int
  exercises  Exercise[]
  workout    Workout    @relation(fields: [workoutId], references: [id], onDelete: Cascade)
  workoutId  Int
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
}

model Workout {
  id        Int       @id @default(autoincrement())
  name      String
  sections  Section[]
  program   Program   @relation(fields: [programId], references: [id], onDelete: Cascade)
  programId Int
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
}

model Program {
  id       Int       @id @default(autoincrement())
  name     String
  workouts Workout[]
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   Int
}

model Image {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  imageUrl    String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  Exercise    Exercise[]
}
